// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package suncertify.admin;

/**
 * Fully generated.
 * 
 */
@SuppressWarnings("deprecation")
public final class LockableServiceProvider_Stub extends
	java.rmi.server.RemoteStub implements suncertify.common.ServicProvider,
	java.rmi.Remote {
    private static final java.rmi.server.Operation[] operations = { new java.rmi.server.Operation(
	    "suncertify.common.RoomOfferService getRoomOfferService()") };

    private static final long interfaceHash = 8825923882540309865L;

    private static final long serialVersionUID = 2;

    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_getRoomOfferService_0;

    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		    new java.lang.Class[] { java.rmi.Remote.class,
			    java.lang.reflect.Method.class,
			    java.lang.Object[].class, long.class });
	    useNewInvoke = true;
	    $method_getRoomOfferService_0 = suncertify.common.ServicProvider.class
		    .getMethod("getRoomOfferService", new java.lang.Class[] {});
	} catch (final java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }

    /**
     * Fully generated.
     * 
     */
    public LockableServiceProvider_Stub() {
	super();
    }

    /**
     * Fully generated.
     * 
     */
    public LockableServiceProvider_Stub(final java.rmi.server.RemoteRef ref) {
	super(ref);
    }

    // methods from remote interfaces

    // implementation of getRoomOfferService()
    @Override
    public suncertify.common.RoomOfferService getRoomOfferService()
	    throws java.rmi.RemoteException {
	try {
	    if (useNewInvoke) {
		final Object $result = ref.invoke(this,
			$method_getRoomOfferService_0, null,
			-2859605693618835423L);
		return ((suncertify.common.RoomOfferService) $result);
	    } else {
		final java.rmi.server.RemoteCall call = ref.newCall(this,
			operations, 0, interfaceHash);
		ref.invoke(call);
		suncertify.common.RoomOfferService $result;
		try {
		    final java.io.ObjectInput in = call.getInputStream();
		    $result = (suncertify.common.RoomOfferService) in
			    .readObject();
		} catch (final java.io.IOException e) {
		    throw new java.rmi.UnmarshalException(
			    "error unmarshalling return", e);
		} catch (final java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException(
			    "error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (final java.lang.RuntimeException e) {
	    throw e;
	} catch (final java.rmi.RemoteException e) {
	    throw e;
	} catch (final java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException(
		    "undeclared checked exception", e);
	}
    }
}
